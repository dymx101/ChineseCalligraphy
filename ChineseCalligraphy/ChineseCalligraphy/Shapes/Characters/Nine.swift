//
//  Nine.swift
//  ProjectName
//
//  Created by Yiming on 11/24/2559 BE.
//  Copyright Â© 2559 PhotoMagic. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class Nine : NSObject {

    //// Drawing Methods

    public dynamic class func shape(frame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 400)) -> [UIBezierPath] {
        //// General Declarations
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

//        //// Color Declarations
//        let color = UIColor(red: 1.000, green: 0.673, blue: 0.673, alpha: 0.709)
//        let color2 = UIColor(red: 0.903, green: 0.611, blue: 0.611, alpha: 0.668)
        var paths = [UIBezierPath]()

        //// Subframes
        let group: CGRect = CGRect(x: frame.minX + fastFloor(frame.width * 0.15755 + 0.48) + 0.02, y: frame.minY + fastFloor(frame.height * 0.17375) + 0.5, width: fastFloor(frame.width * 0.87878 - 0.01) - fastFloor(frame.width * 0.15755 + 0.48) + 0.49, height: fastFloor(frame.height * 0.82080 + 0.18) - fastFloor(frame.height * 0.17375) - 0.18)


        //// Group
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: group.minX + 0.09179 * group.width, y: group.minY + 0.40955 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.15765 * group.width, y: group.minY + 0.40955 * group.height), controlPoint1: CGPoint(x: group.minX + 0.09179 * group.width, y: group.minY + 0.40955 * group.height), controlPoint2: CGPoint(x: group.minX + 0.09872 * group.width, y: group.minY + 0.44819 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.59440 * group.width, y: group.minY + 0.18159 * group.height), controlPoint1: CGPoint(x: group.minX + 0.21658 * group.width, y: group.minY + 0.37091 * group.height), controlPoint2: CGPoint(x: group.minX + 0.53894 * group.width, y: group.minY + 0.18159 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.68799 * group.width, y: group.minY + 0.23182 * group.height), controlPoint1: CGPoint(x: group.minX + 0.64987 * group.width, y: group.minY + 0.18159 * group.height), controlPoint2: CGPoint(x: group.minX + 0.68799 * group.width, y: group.minY + 0.20478 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.59440 * group.width, y: group.minY + 0.35546 * group.height), controlPoint1: CGPoint(x: group.minX + 0.68799 * group.width, y: group.minY + 0.25887 * group.height), controlPoint2: CGPoint(x: group.minX + 0.62096 * group.width, y: group.minY + 0.28501 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.59440 * group.width, y: group.minY + 0.56023 * group.height), controlPoint1: CGPoint(x: group.minX + 0.56785 * group.width, y: group.minY + 0.42591 * group.height), controlPoint2: CGPoint(x: group.minX + 0.54241 * group.width, y: group.minY + 0.48682 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.89911 * group.width, y: group.minY + 0.59009 * group.height), controlPoint1: CGPoint(x: group.minX + 0.64640 * group.width, y: group.minY + 0.63364 * group.height), controlPoint2: CGPoint(x: group.minX + 0.94418 * group.width, y: group.minY + 0.69054 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.80585 * group.width, y: group.minY + 0.40955 * group.height), controlPoint1: CGPoint(x: group.minX + 0.85405 * group.width, y: group.minY + 0.48963 * group.height), controlPoint2: CGPoint(x: group.minX + 0.80585 * group.width, y: group.minY + 0.40955 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.98956 * group.width, y: group.minY + 0.56023 * group.height), controlPoint1: CGPoint(x: group.minX + 0.80585 * group.width, y: group.minY + 0.40955 * group.height), controlPoint2: CGPoint(x: group.minX + 0.96822 * group.width, y: group.minY + 0.50192 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.95459 * group.width, y: group.minY + 0.70600 * group.height), controlPoint1: CGPoint(x: group.minX + 1.01090 * group.width, y: group.minY + 0.61855 * group.height), controlPoint2: CGPoint(x: group.minX + 0.99965 * group.width, y: group.minY + 0.64804 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.61398 * group.width, y: group.minY + 0.71889 * group.height), controlPoint1: CGPoint(x: group.minX + 0.90953 * group.width, y: group.minY + 0.76395 * group.height), controlPoint2: CGPoint(x: group.minX + 0.71104 * group.width, y: group.minY + 0.79616 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.47987 * group.width, y: group.minY + 0.49206 * group.height), controlPoint1: CGPoint(x: group.minX + 0.51693 * group.width, y: group.minY + 0.64161 * group.height), controlPoint2: CGPoint(x: group.minX + 0.47987 * group.width, y: group.minY + 0.60797 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.52508 * group.width, y: group.minY + 0.31682 * group.height), controlPoint1: CGPoint(x: group.minX + 0.47987 * group.width, y: group.minY + 0.37615 * group.height), controlPoint2: CGPoint(x: group.minX + 0.52508 * group.width, y: group.minY + 0.31682 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.32750 * group.width, y: group.minY + 0.40955 * group.height), controlPoint1: CGPoint(x: group.minX + 0.52508 * group.width, y: group.minY + 0.31682 * group.height), controlPoint2: CGPoint(x: group.minX + 0.41416 * group.width, y: group.minY + 0.34773 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.15765 * group.width, y: group.minY + 0.51387 * group.height), controlPoint1: CGPoint(x: group.minX + 0.24084 * group.width, y: group.minY + 0.47137 * group.height), controlPoint2: CGPoint(x: group.minX + 0.22351 * group.width, y: group.minY + 0.51387 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.09179 * group.width, y: group.minY + 0.40955 * group.height), controlPoint1: CGPoint(x: group.minX + 0.09179 * group.width, y: group.minY + 0.51387 * group.height), controlPoint2: CGPoint(x: group.minX + 0.09179 * group.width, y: group.minY + 0.40955 * group.height))
        bezierPath.addLine(to: CGPoint(x: group.minX + 0.09179 * group.width, y: group.minY + 0.40955 * group.height))
        bezierPath.close()
        
        paths.append(bezierPath)


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: group.minX + 0.27550 * group.width, y: group.minY + 0.00000 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.39834 * group.width, y: group.minY + 0.10135 * group.height), controlPoint1: CGPoint(x: group.minX + 0.27550 * group.width, y: group.minY + 0.00000 * group.height), controlPoint2: CGPoint(x: group.minX + 0.37199 * group.width, y: group.minY + 0.05136 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.35872 * group.width, y: group.minY + 0.58535 * group.height), controlPoint1: CGPoint(x: group.minX + 0.42469 * group.width, y: group.minY + 0.15133 * group.height), controlPoint2: CGPoint(x: group.minX + 0.42361 * group.width, y: group.minY + 0.41411 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.11655 * group.width, y: group.minY + 0.91681 * group.height), controlPoint1: CGPoint(x: group.minX + 0.29384 * group.width, y: group.minY + 0.75659 * group.height), controlPoint2: CGPoint(x: group.minX + 0.20126 * group.width, y: group.minY + 0.85780 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.00000 * group.width, y: group.minY + 1.00000 * group.height), controlPoint1: CGPoint(x: group.minX + 0.03185 * group.width, y: group.minY + 0.97582 * group.height), controlPoint2: CGPoint(x: group.minX + 0.00000 * group.width, y: group.minY + 1.00000 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.15953 * group.width, y: group.minY + 0.77411 * group.height), controlPoint1: CGPoint(x: group.minX + 0.00000 * group.width, y: group.minY + 1.00000 * group.height), controlPoint2: CGPoint(x: group.minX + 0.12334 * group.width, y: group.minY + 0.85641 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.29396 * group.width, y: group.minY + 0.43697 * group.height), controlPoint1: CGPoint(x: group.minX + 0.19572 * group.width, y: group.minY + 0.69181 * group.height), controlPoint2: CGPoint(x: group.minX + 0.27740 * group.width, y: group.minY + 0.56123 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.27550 * group.width, y: group.minY + 0.00000 * group.height), controlPoint1: CGPoint(x: group.minX + 0.31052 * group.width, y: group.minY + 0.31272 * group.height), controlPoint2: CGPoint(x: group.minX + 0.27550 * group.width, y: group.minY + 0.00000 * group.height))
        
        paths.append(bezier2Path)
        
        return paths
    }
    
    public dynamic class func finalPath(frame: CGRect) -> UIBezierPath {
        let paths = self.shape(frame: frame)
        let finalPath = UIBezierPath()
        paths.forEach { (path) in
            finalPath.append(path)
        }
        
        return finalPath
    }
    
    public dynamic class func drawCanvas1(frame: CGRect) {
        
        let finalPath = self.finalPath(frame: frame)
        //// Color Declarations
        let color = UIColor(red: 0.385, green: 0.656, blue: 0.250, alpha: 1.000)
        color.setFill()
        UIColor.red.setStroke()

        finalPath.fill()
        finalPath.lineWidth = 4
        finalPath.stroke()
        
    }

}
