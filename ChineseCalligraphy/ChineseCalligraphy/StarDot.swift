//
//  StarDot.swift
//  ProjectName
//
//  Created by Yiming on 11/24/2559 BE.
//  Copyright Â© 2559 CompanyName. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class StarDot : NSObject {

    //// Drawing Methods

    public dynamic class func shape(frame: CGRect = CGRect(x: 0, y: 0, width: 400, height: 400)) -> UIBezierPath {
        //// General Declarations
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        let path = UIBezierPath()
        
        //// Subframes
        let group: CGRect = CGRect(x: frame.minX + fastFloor(frame.width * 0.08500 + 0.5), y: frame.minY + fastFloor(frame.height * 0.14125) + 0.5, width: fastFloor(frame.width * 0.91750 + 0.5) - fastFloor(frame.width * 0.08500 + 0.5), height: fastFloor(frame.height * 0.92125) - fastFloor(frame.height * 0.14125))


        //// Group
        //// Star Drawing
        let starPath = UIBezierPath()
        starPath.move(to: CGPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.00000 * group.height))
        starPath.addLine(to: CGPoint(x: group.minX + 0.67634 * group.width, y: group.minY + 0.25729 * group.height))
        starPath.addLine(to: CGPoint(x: group.minX + 0.97553 * group.width, y: group.minY + 0.34549 * group.height))
        starPath.addLine(to: CGPoint(x: group.minX + 0.78532 * group.width, y: group.minY + 0.59271 * group.height))
        starPath.addLine(to: CGPoint(x: group.minX + 0.79389 * group.width, y: group.minY + 0.90451 * group.height))
        starPath.addLine(to: CGPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.80000 * group.height))
        starPath.addLine(to: CGPoint(x: group.minX + 0.20611 * group.width, y: group.minY + 0.90451 * group.height))
        starPath.addLine(to: CGPoint(x: group.minX + 0.21468 * group.width, y: group.minY + 0.59271 * group.height))
        starPath.addLine(to: CGPoint(x: group.minX + 0.02447 * group.width, y: group.minY + 0.34549 * group.height))
        starPath.addLine(to: CGPoint(x: group.minX + 0.32366 * group.width, y: group.minY + 0.25729 * group.height))
        starPath.close()

        path.append(starPath)
        
        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: group.minX + fastFloor(group.width * 0.75225) + 0.5, y: group.minY + fastFloor(group.height * 0.06731 + 0.5), width: fastFloor(group.width * 0.84835) - fastFloor(group.width * 0.75225), height: fastFloor(group.height * 0.16346 + 0.5) - fastFloor(group.height * 0.06731 + 0.5)))
        
        path.append(ovalPath)
        
        return path
    }

    public dynamic class func drawCanvas1(frame: CGRect) {
        
        let path = self.shape(frame: frame)
        //// Color Declarations
        let color = UIColor(red: 0.385, green: 0.656, blue: 0.250, alpha: 1.000)
        color.setFill()
        path.fill()
        UIColor.black.setStroke()
        path.lineWidth = 3
        path.stroke()
        
    }
}
